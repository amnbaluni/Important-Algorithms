https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/
TC - O(m*n)

#define ll long long
const ll MOD=1e9+7;
class Solution {
public:
    //func to calculate hash value
    ll hashValue(string str, ll RADIX, ll m){
        ll ans = 0;
        ll factor = 1;
        //traverse from last
        for(ll i=m-1; i>=0; i--){
            ans += ((str[i]-'a')*factor)%MOD;
            //update factor
            factor = (factor * RADIX)%MOD;
        }
        return ans%MOD;
    }

    int strStr(string haystack, string needle) {
        ll n = haystack.length();
        ll m = needle.length();
        if(n<m) return -1;

        ll RADIX = 26;
        ll max_weight = 1;
        for(ll i=1; i<=m; i++){
            max_weight = (max_weight*RADIX) % MOD;
        }

        ll hashNeedle = hashValue(needle, RADIX, m);
        ll hashHay = 0;

        for(ll i=0; i<=n-m; i++){
            if(i==0){
                hashHay = hashValue(haystack, RADIX, m);
            }
            else{
                //remove (i-1) & add (i-m+1)
                hashHay = ((hashHay*RADIX)%MOD - ((haystack[i-1]-'a') * max_weight) % MOD + 
                (haystack[i+m-1]-'a') + MOD) % MOD;
            }
            //check hash values of both
            if(hashNeedle == hashHay){
                for(ll j=0; j<m; j++){
                    if(needle[j]!=haystack[j+i]) break;
                    if(j==m-1){
                        return i;
                    }
                }
            }
        }
        return -1;
    }
};
